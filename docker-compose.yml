version: "3"

networks:
  paimonbank:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:

services:
  backend:
    build:
      context: .
      dockerfile: dockerfile/backend/Dockerfile
    container_name: backend
    hostname: backend
    ports:
      - "8080:8080"
    networks:
      - paimonbank
    volumes:
      - /home/ubuntu/ap-southeast-1-bundle.pem:/home/ubuntu/ap-southeast-1-bundle.pem
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PARAMS: ${DB_PARAMS}
      JWT_SECRET: ${JWT_SECRET}
      BCRYPT_SALT: ${BCRYPT_SALT}
      S3_ID: ${S3_ID}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      ENV: ${ENV}
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    networks:
      - paimonbank
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      # tell the prometheus to use `/etc/prometheus/prometheus.yml`
      - "--config.file=/etc/prometheus/prometheus.yml"
      # tell the prometheus to use `/prometheus` as the storage path
      - "--storage.tsdb.path=/prometheus"
      # tell prometheus to reload if we hit `http://localhost:9090/-/reload` to reload changes in `./prometheus.yml`
      - "--web.enable-lifecycle"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    networks:
      - paimonbank
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-configs:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
