{
	"info": {
		"_postman_id": "b38512f5-f10f-492f-803d-5f705fd1a6fc",
		"name": "Bank Paimon",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17345135"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"email@gmail.com\", // not null, can't be duplicate email, should be in email format\r\n\t\"name\": \"John Doe\", // not null, minLength 5, maxLength 50, name can be duplicate with others\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "user Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"email2@gmail.com\", // not null, can't be duplicate email, should be in email format\r\n\t\"name\": \"John Doe\", // not null, minLength 5, maxLength 50, name can be duplicate with others\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/user/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"user",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"accessTokenJohn\", jsonData.data.accessToken);\r",
									"\r",
									"pm.test('it should response 201 status code', () => {\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"email@gmail.com\", // not null, can't be duplicate email, should be in email format\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"accessTokenDoe\", jsonData.data.accessToken);\r",
									"\r",
									"pm.test('it should response 201 status code', () => {\r",
									"    pm.expect(pm.response).to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"email\": \"email2@gmail.com\", // not null, can't be duplicate email, should be in email format\r\n\t\"password\": \"password\" // not null, minLength 5, maxLength 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/user/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "doe",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenDoe}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/metrics",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Balance",
			"item": [
				{
					"name": "john",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"senderBankAccountNumber\": \"384792374\", // not null, minLength 5 maxLength 30\r\n\t\"senderBankName\": \"paimonhaws\", // not null, minLength 5 maxLength 30\r\n\t\"addedBalance\": 8000, // not null, can't be negative\r\n\t\"currency\":\"USD\", // not null, should be a valid ISO 4217 currency codes  \r\n\t\"transferProofImg\": \"https://www.google.com/img.jpg\" // not null, should be an image url\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/balance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"balance"
							]
						}
					},
					"response": []
				},
				{
					"name": "balance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/balance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"balance"
							]
						}
					},
					"response": []
				},
				{
					"name": "balance history",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/v1/balance/history",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"balance",
								"history"
							]
						}
					},
					"response": []
				},
				{
					"name": "transaction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessTokenJohn}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"recipientBankAccountNumber\": \"1232423\", // not null, minLength 5 maxLength 30\r\n\t\"recipientBankName\": \"paimonbanka\", // not null, minLength 5 maxLength 30\r\n\t\"fromCurrency\":\"USD\", // not null, should be a valid ISO 4217 currency codes  \r\n\t\"balances\":8000  // not null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/v1/transaction",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"transaction"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}